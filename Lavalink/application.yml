server: # REST and WS server
  port: 4869
  address: 0.0.0.0
spring:
  main:
    banner-mode: log
lavalink:
  plugins:
    - dependency: "me.rohank05:lavalink-filter-plugin:0.0.1"
      repository: "https://jitpack.io"
    - dependency: "com.github.TopiSenpai.LavaSrc:lavasrc-plugin:3.1.7"
      repository: "https://jitpack.io"
    - dependency: "dev.lavalink.youtube:youtube-plugin:1.5.0"
      snapshot: false
  server:
    password: "localhost"
    sources:
      youtube: false
      bandcamp: true
      soundcloud: true
      twitch: false
      vimeo: true
      mixer: true
      http: true
      local: false
    bufferDurationMs: 400
    opusEncodingQuality: 5 # Opus encoder quality. Valid values range from 0 to 10, where 10 is best quality but is the most expensive on the CPU.
    resamplingQuality: LOW # Quality of resampling operations. Valid values are LOW, MEDIUM and HIGH, where HIGH uses the most CPU.
    trackStuckThresholdMs: 10000 # The threshold for how long a track can be stuck. A track is stuck if does not return any audio data.
    useSeekGhosting: true # Seek ghosting is the effect where whilst a seek is in progress, the audio buffer is read from until empty, or until seek is ready.
    youtubePlaylistLoadLimit: 9
    youtubeSearchEnabled: true
    soundcloudSearchEnabled: true
    gc-warnings: true

    #ratelimit:
     # ipBlocks: []
      #strategy: "RotateOnBan"
      #searchTriggersFail: true
      #retrylimit: 1

    youtubeconfig:
      email: ""
      password: ""

metrics:
  prometheus:
    enabled: false
    endpoint: /metrics

sentry:
  dsn: ""

logging:

  file:
    path: ./.logs/lavalink/

  level:
    root: INFO
    lavalink: INFO

  logback:
    rollingpolicy:
      max-file-size: 5MB
      max-history: 10

plugins:

  youtube:
    enabled: true # Whether this source can be used.d
    allowSearch: true # Whether "ytsearch:" and "ytmsearch:" can be used.
    allowDirectVideoIds: true # Whether just video IDs can match. If false, only complete URLs will be loaded.
    allowDirectPlaylistIds: true # Whether just playlist IDs can match. If false, only complete URLs will be loaded.
    # The clients to use for track loading. See below for a list of valid clients.
    # Clients are queried in the order they are given (so the first client is queried first and so on...)
    clients:
      - MUSIC
      - ANDROID_TESTSUITE
      - WEB
      - TVHTML5EMBEDDED

    WEB:

      playback: true
    TVHTML5EMBEDDED:

      playlistLoading: false
      videoLoading: false
      searching: false

  # youtube:
  #   enabled: true
  #   clients: ["MUSIC", "ANDROID", "WEB", "TVHTML5EMBEDDED"]

  lavasrc:
    providers:
      - "ytsearch:\"%ISRC%\""
      - "ytsearch:%QUERY%"
      - "scsearch:%QUERY%"
    sources:
      spotify: true
      applemusic: true
      deezer: false
    spotify:
      clientId: "a452a60275234406a3b43b84b26785a6"
      clientSecret: "e0db429aca79461796797af12ec8094a"
      countryCode: "US"
    applemusic:
      countryCode: "US"
    deezer:
      masterDecryptionKey: "your master decryption key" #